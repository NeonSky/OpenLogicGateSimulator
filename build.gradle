/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.10/userguide/tutorial_java_projects.html
 */

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.gradle:osdetector-gradle-plugin:1.6.0'
    }
}

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'

    // Apply the checkstyle plugin for automatic code style checks
    id 'checkstyle'

    // Apply the SpotBugs plugin to find common bugs in java code
    id "com.github.spotbugs" version "1.6.4"

    // Apply the PMD plugin
    id "pmd"
}

// Detect the platform we are running on
apply plugin: 'com.google.osdetector'
ext.platform = osdetector.os == 'osx' ? 'mac' : osdetector.os == 'windows' ? 'win' : osdetector.os

// Define the main class for the application
mainClassName = 'org.cafebabe.Main'

dependencies {
    compile "org.openjfx:javafx-base:11:$platform"
    compile "org.openjfx:javafx-graphics:11:$platform"
    compile "org.openjfx:javafx-controls:11:$platform"
    compile "org.openjfx:javafx-fxml:11:$platform"
    compile "org.openjfx:javafx-media:11:$platform"

    compileOnly (
        'net.jcip:jcip-annotations:1.0'
    )

    compileOnly (
        'com.github.spotbugs:spotbugs-annotations:3.1.8'
    )

    implementation (
        'org.reflections:reflections:0.9.11'
    )

    implementation (
        'javax.annotation:javax.annotation-api:1.3.2'
    )

    testImplementation (
        'org.junit.jupiter:junit-jupiter-api:5.3.1'
    )

    testRuntimeOnly (
        'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    )
}

// Define compilation steps to build with the correct javafx version
compileJava {
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
                '--add-modules', 'javafx.controls'
        ]
    }
}

// Add necessary JVM args to run application
run {
    doFirst {
        jvmArgs = [
                '-Djdk.gtk.version=2',
                '--module-path', classpath.asPath,
                '--add-modules', 'javafx.controls',
                '--add-exports', 'javafx.graphics/com.sun.javafx.util=ALL-UNNAMED',
                '--add-exports', 'javafx.base/com.sun.javafx.reflect=ALL-UNNAMED',
                '--add-exports', 'javafx.base/com.sun.javafx.beans=ALL-UNNAMED',
                '--add-exports', 'javafx.graphics/com.sun.glass.utils=ALL-UNNAMED',
                '--add-exports', 'javafx.graphics/com.sun.javafx.tk=ALL-UNNAMED'

        ]
    }
}


// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
}

// Use checkstyle 8.11 (latest), rather than gradle default ancient 6.19
checkstyle {
    toolVersion '8.11'
    ignoreFailures false
    maxWarnings 0
    configFile = project(':').file('config/checkstyle/checkstyle.xml')
    configProperties = [ "suppressionFile" : project(':').file('config/checkstyle/suppressions.xml')]
}

// Configure PMD settings
pmd {
    toolVersion '6.8.0'
    consoleOutput true
    ignoreFailures false
    ruleSetFiles files("config/pmd/olgsRuleSet.xml")
}
